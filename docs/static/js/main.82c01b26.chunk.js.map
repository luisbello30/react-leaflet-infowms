{"version":3,"sources":["components/Map.js","components/Info.js","App.js","index.js"],"names":["position","Map","_ref","features","_jsxs","MapContainer","center","zoom","className","children","_jsx","TileLayer","attribution","url","InfoWMSTileLayer","params","layers","format","transparent","feature_count","eventHandlers","click","e","console","log","fetch","then","response","json","wmsInfo","Info","Object","keys","properties","map","value","index","values","App","_useState","useState","_useState2","_slicedToArray","setFeatures","rootElement","document","getElementById","render","StrictMode"],"mappings":"+MAKMA,EAAW,CAAC,MAAO,OAuCVC,MArCf,SAAYC,GAAgB,IAAbC,EAAQD,EAARC,SAYb,OACEC,eAACC,IAAY,CAACC,OAAQN,EAAUO,KAAM,GAAIC,UAAU,MAAKC,SAAA,CACvDC,cAACC,IAAS,CACRC,YAAY,wFACZC,IAAI,uDAENH,cAACI,IAAgB,CACfD,IAAI,wEACJE,OAAQ,CACNC,OAAQ,aACRC,OAAQ,YACRC,aAAa,EACbN,YAAa,oCACbO,cAAe,GAEjBC,cAAe,CAAEC,MAAO,SAACC,GAAC,OAzBhC,SAAiBA,GACfC,QAAQC,IAAIF,GACZG,MAAMH,EAAET,KACLa,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACC,GACLJ,QAAQC,IAAIG,GACZxB,EAASwB,EAASxB,SACpB,GACJ,CAiBqC0B,CAAQP,EAAE,OAIjD,ECPeQ,MA7Bf,SAAa5B,GAAgB,IAAbC,EAAQD,EAARC,SACd,OACEC,eAAA,SAAAK,SAAA,CACEC,cAAA,SAAAD,SACEC,cAAA,MAAAD,SACGN,EAAS,IACR4B,OAAOC,KAAK7B,EAAS,GAAG8B,YACrBC,KAAI,SAACC,EAAOC,GAAK,OAChB1B,cAAA,MAAAD,SAAiB0B,GAARC,EAAmB,QAItC1B,cAAA,SAAAD,SACGN,EAAS+B,KAAI,SAACC,EAAOC,GAAK,OACzB1B,cAAA,MAAAD,SACGsB,OAAOM,OAAOF,EAAMF,YAClBC,KAAI,SAACC,EAAOC,GAAK,OAChB1B,cAAA,MAAAD,SAAiB0B,GAARC,EAAmB,KAHzBA,EAKJ,QAKf,ECrBe,SAASE,IAEtB,IAAAC,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArCpC,EAAQsC,EAAA,GAAEE,EAAWF,EAAA,GAE5B,OACErC,eAAA,OAAKI,UAAU,MAAKC,SAAA,CAClBC,cAACT,EAAG,CAACE,SAAU,SAACmB,GAAC,OAAKqB,EAAYrB,EAAE,IACpCZ,cAACoB,EAAI,CAAC3B,SAAUA,MAGtB,CCVA,IAAMyC,EAAcC,SAASC,eAAe,QAC5CC,iBACErC,cAACsC,aAAU,CAAAvC,SACTC,cAAC4B,EAAG,MAENM,E","file":"static/js/main.82c01b26.chunk.js","sourcesContent":["import { InfoWMSTileLayer } from 'react-leaflet-infowms'\nimport { MapContainer, TileLayer } from 'react-leaflet'\nimport PropTypes from 'prop-types'\nimport 'leaflet/dist/leaflet.css'\n\nconst position = [57.76, 11.96]\n\nfunction Map({ features }) {\n\n  function wmsInfo(e) {\n    console.log(e)\n    fetch(e.url)\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(response)\n        features(response.features)\n      })\n  }\n\n  return (\n    <MapContainer center={position} zoom={13} className='map'>\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n      />\n      <InfoWMSTileLayer\n        url='https://public-mapservice.lf.goteborg.se/geoserver/LF_Externwebb/wms?'\n        params={{\n          layers: 'Utrustning',\n          format: 'image/png',\n          transparent: true,\n          attribution: 'Public Geoserver LF Goteborg City',\n          feature_count: 1,\n        }}\n        eventHandlers={{ click: (e) => wmsInfo(e) }}\n      />\n    </MapContainer>\n  )\n}\n\nMap.propTypes = {\n  features: PropTypes.func,\n}\n\nexport default Map\n","import PropTypes from 'prop-types'\n\nfunction Info({ features }) {\n  return (\n    <table>\n      <thead>\n        <tr>\n          {features[0] &&\n            Object.keys(features[0].properties)\n              .map((value, index) => (\n                <th key={index}>{value}</th>\n              ))}\n        </tr>\n      </thead>\n      <tbody>\n        {features.map((value, index) => (\n          <tr key={index}>\n            {Object.values(value.properties)\n              .map((value, index) => (\n                <td key={index}>{value}</td>\n              ))}\n          </tr>\n        ))}\n      </tbody>\n    </table >\n  )\n}\nInfo.propTypes = {\n  features: PropTypes.array,\n}\n\nexport default Info","import './styles.css'\nimport Map from './components/Map'\nimport Info from './components/Info'\nimport { useState } from 'react'\n\nexport default function App() {\n\n  const [features, setFeatures] = useState([])\n\n  return (\n    <div className='App'>\n      <Map features={(e) => setFeatures(e)} />\n      <Info features={features} />\n    </div>\n  )\n}\n","import React, { StrictMode } from 'react'\nimport { render } from 'react-dom'\n\nimport App from './App'\n\nconst rootElement = document.getElementById('root')\nrender(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement,\n)\n"],"sourceRoot":""}